# Generated by Django 5.2.3 on 2025-09-17 17:23

import django.contrib.postgres.fields
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('events', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_name', models.CharField(max_length=255)),
                ('event_date', models.DateField()),
                ('event_time', models.TimeField()),
                ('number_of_tickets', models.PositiveIntegerField()),
                ('ticket_reference', models.UUIDField(blank=True, editable=False, null=True)),
                ('ticket_section', models.CharField(max_length=255)),
                ('ticket_row', models.CharField(max_length=20)),
                ('ticket_seats', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=10), help_text='Comma separated seat numbers.', size=None)),
                ('ticket_face_value', models.DecimalField(decimal_places=2, max_digits=8)),
                ('ticket_upload_type', models.CharField(choices=[('e-ticket', 'E-Ticket'), ('paper', 'Paper'), ('mobile-transfer', 'Mobile Transfer')], max_length=20)),
                ('ticket_benefits_and_Restrictions', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, default=list, max_length=50), size=None)),
                ('ticket_sell_price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('revolut_order_id', models.CharField(max_length=100)),
                ('revolut_checkout_url', models.URLField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('ticket_uploaded', models.BooleanField(default=False)),
                ('paid_to_reseller', models.BooleanField(default=False)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payout_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='sale', to='tickets.order')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sales', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ticket_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('buyer', models.EmailField(blank=True, max_length=254, null=True)),
                ('upload_choice', models.CharField(choices=[('now', 'Upload Now'), ('later', 'Upload Later')], max_length=20)),
                ('upload_file', models.FileField(blank=True, null=True, upload_to='')),
                ('upload_by', models.DateField(blank=True, null=True)),
                ('number_of_tickets', models.PositiveIntegerField()),
                ('row', models.CharField(max_length=20)),
                ('seats', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=10), help_text='Comma separated seat numbers.', size=None)),
                ('face_value', models.DecimalField(decimal_places=2, max_digits=8)),
                ('ticket_type', models.CharField(choices=[('e-ticket', 'E-Ticket'), ('paper', 'Paper'), ('mobile-transfer', 'Mobile Transfer')], max_length=20)),
                ('benefits_and_Restrictions', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('select_features_disclosures', 'Select features & disclosures'), ('restricted_view', 'Restricted view (printed on ticket)'), ('child_16_under', 'Child ticket (ages 16 and under)*'), ('child_18_under', 'Child ticket (ages 18 and under)*'), ('junior_21_under', 'Junior ticket (ages 21 and under)'), ('senior_61_older', 'Senior ticket (61 and older)'), ('away_supporters_only', 'Away Supporters Only'), ('home_supporters_only', 'Home Supporters Only'), ('early_access', 'Early Access'), ('vip_lounge_access', 'Vip Lounge Access'), ('parking_pass', 'Parking Pass'), ('full_suite_not_shared', 'Full Suite (not shared)'), ('full_suite_shared', 'Full Suite (Shared)'), ('unlimited_food_drinks', 'Includes unlimited food and drinks'), ('limited_complimentary_food_drinks', 'Includes limited complimentary food and drinks'), ('food_drink_voucher', 'Food and drink voucher included'), ('food_drink_available_purchase', 'Food and drink Available for Purchase'), ('pregame_food_beverage', 'Includes pregame food and beverage'), ('free_halftime_drinks', 'Free Halftime drinks'), ('complimentary_matchday_programme', 'Complimentary matchday programme'), ('padded_seats', 'Padded Seats'), ('standing_only', 'Standing Only'), ('next_to_players_entrance', "Next to players' entrance"), ('validate', 'Validate')], max_length=50), blank=True, default=list, size=None)),
                ('sell_price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('sell_price_for_normal', models.DecimalField(decimal_places=2, editable=False, max_digits=8)),
                ('sell_price_for_reseller', models.DecimalField(decimal_places=2, editable=False, max_digits=8)),
                ('checked', models.BooleanField(default=False)),
                ('ordered', models.BooleanField(default=False)),
                ('sold', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='events.event')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='events.eventsection')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['ticket_id'], name='tickets_tic_ticket__5a4a00_idx'), models.Index(fields=['event'], name='tickets_tic_event_i_abeaa9_idx'), models.Index(fields=['seller'], name='tickets_tic_seller__0f4f1e_idx'), models.Index(fields=['section'], name='tickets_tic_section_e41a4d_idx')],
            },
        ),
    ]
